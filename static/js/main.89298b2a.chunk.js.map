{"version":3,"sources":["components/Nav.js","images/kz1.jpeg","images/kz3.jpeg","images/kz2.jpg","components/about.js","components/footer.js","App.js","index.js"],"names":["Notes","tim","useState","notes","setNotes","useEffect","fetch","then","r","json","data","className","map","hour","description","onClick","id","method","response","prevNotes","filter","not","AddNot","onAddDate","setDescription","error","setError","onSubmit","event","preventDefault","newError","push","length","newNotes","moment","format","time","Date","getTime","body","JSON","stringify","headers","type","placeholder","value","onChange","e","target","name","Notifications","dataset","tenMin","twoDay","OneWeek","OneMonth","OneYear","el","index","Home","href","src","learnCurve","alt","forgetCurve1","library","add","faFacebookF","faTwitter","Footer","icon","App","setDataset","currentTime","setCurrentTime","indexesTenMin","setIndexesTenMin","indexesTwoDay","setIndexesTwoDay","indexesOneWeek","setIndexesOneWeek","indexesOneMonth","setIndexesOneMonth","indexesOneYear","setIndexesOneYear","intervalId","setInterval","clearInterval","indexTenMin","indexTwoDay","indexOneWeek","indexOneMonth","indexOneYear","i","showMenu","setShowMenu","isMobile","setIsMobile","window","matchMedia","addListener","matches","to","exact","path","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89298b2a.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Moment from \"react-moment\";//formatowanie dat\nimport 'moment-timezone'//ustawia strefy czasowe\nimport moment from 'moment'\n\n\n\n//-------------------------------\n//----------SHOW NOTES-----------\n//-------------------------------\n\nexport const Notes = ({tim}) => {\n    const [notes, setNotes] = useState([])\n\n    useEffect(() => {\n        fetch('http://localhost:3000/notes?_sort=id&_order=desc')\n            .then(r => r.json())\n            .then(data => {\n                setNotes(data)\n            })\n    }, [])\n\n    const deleteNotes = (id) => {\n        fetch(`http://localhost:3000/notes/${id}`, {\n            method: \"DELETE\",\n        })\n            .then((response) => response.json())\n            .then(() => {\n                setNotes((prevNotes) => prevNotes.filter((not) => not.id !== id))\n            })\n    }\n\n    return (\n        <>\n            <div className={\"notes-container container\"}>\n                <h1>Wszystkie Notatki</h1>\n                <ul>{notes.map(notes => (\n\n                        <section key={notes.id} className={\"notes-all\"}>\n\n                            <div className={\"notes-time\"}>\n                                <li>{notes.hour}</li>\n                            </div>\n                            <div className={\"notes-description\"}>\n                                <li>\n                                    {notes.description}\n                                </li>\n                            </div>\n                            <div className={\"notes-content\"}>\n                                <li>\n                                    {notes.notes}\n                                </li>\n                            </div>\n                            <button className={\"notes-btn\"} onClick={() => deleteNotes(notes.id)}>Usuń\n                            </button>\n                        </section>\n\n                ))}</ul>\n            </div>\n        </>\n    )\n}\n\n\n//--------------------------\n//--------ADD NOTES---------\n//--------------------------\nexport const AddNot = ({onAddDate}, {tim}) => {\n\n    const [description, setDescription] = useState('')\n    const [notes, setNotes] = useState('')\n    const [error, setError] = useState(\"\")\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newError = [];\n        if (description < 1) newError.push(1)\n        if (notes < 1) newError.push(1)\n        if (newError.length !== 0) {\n            setError(\"Musi być przynajmniej jeden znak\")\n        } else {\n            setError(\"\")\n\n            const newNotes = {\n                description,\n                notes,\n                hour: moment().format('MMMM Do YYYY, h:mm:ss a'), //new Date(),//.toLocaleTimeString(),\n                time: new Date().getTime()\n            }\n\n            if (newError.length === 0) {\n                fetch('http://localhost:3000/notes', {\n                    method: \"POST\",\n                    body: JSON.stringify(newNotes),\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                })\n                    .then((r) => r.json())\n                    .then((data) => {\n                        if (typeof onAddDate === 'function') {\n                            onAddDate(data)\n                        }\n                    })\n            }\n            setNotes(\"\")\n            setDescription(\"\")\n        }\n    }\n\n\n    return (\n            <section className={\"addNot-container container\"}>\n                <div className={\"addNot\"}>\n            <h1>DODAJ NOTATKĘ</h1>\n\n            <form onSubmit={handleSubmit}>\n                <input className={\"input-description\"}\n                    type=\"text\"\n                       placeholder={\"Opis\"}\n                       value={description}\n                       onChange={e => setDescription(e.target.value)}/>\n                <label>\n                    <textarea className={\"textarea-content\"}\n                        name=\"notes\"\n                              placeholder={\"Notatka\"}\n                              // cols=\"30\"\n                              // rows=\"10\"\n                              value={notes}\n                              onChange={e => setNotes(e.target.value)}/>\n                </label>\n\n                <p className={\"error\"}>{error}</p>\n                <button className={\"btn\"}>Add Notes</button>\n            </form>\n                </div>\n            </section>\n    )\n}\n\n\n//--------------------------\n//------NOTIFICATIONS-------\n//--------------------------\n\nexport const Notifications = ({tim, dataset, tenMin, twoDay, OneWeek, OneMonth, OneYear}) => {\n\n    return (\n        <>\n            <div className={\"notes-container notifications notifications-container container \"}>\n                <h1>Wszystkich notatek do powtórki: {tenMin.length +\n                twoDay.length + OneWeek.length + OneMonth.length + OneYear.length}\n                </h1>\n\n                <div>\n\n                    {/*10 min; do 1 dzień*/}\n                    <ul>{tenMin.map((el, index) => (\n                            <section key={dataset[index].id} className={\"notes-all tenMinutes\"}>\n                                <div className={\"notes-time\"}>\n                                    <li>{dataset[el].hour}</li>\n                                </div>\n                                <div className={\"notes-description\"}>\n                                    <li>{dataset[el].description}</li>\n                                </div>\n                                <div className={\"notes-content\"}>\n                                    <li>{dataset[el].notes}</li>\n                                </div>\n                            </section>\n                    ))}</ul>\n\n                    {/*2 dni; do 3 dni*/}\n                    <ul>{twoDay.map((el, index) => (\n                            <section key={dataset[index].id} className={\"notes-all twoDays\"}>\n                                <div className={\"notes-time\"}>\n                                    <li>{dataset[el].hour}</li>\n                                </div>\n                                <div className={\"notes-description\"}>\n                                    <li>{dataset[el].description}</li>\n                                </div>\n                                <div className={\"notes-content\"}>\n                                    <li>{dataset[el].notes}</li>\n                                </div>\n                            </section>\n                    ))}</ul>\n\n                    {/*7 dni; do 8 dni*/}\n                    <ul>{OneWeek.map((el, index) => (\n                            <section key={dataset[index].id} className={\"notes-all week\"}>\n                                <div className={\"notes-time\"}>\n                                    <li>{dataset[el].hour}</li>\n                                </div>\n                                <div className={\"notes-description\"}>\n                                    <li>{dataset[el].description}</li>\n                                </div>\n                                <div className={\"notes-content\"}>\n                                    <li>{dataset[el].notes}</li>\n                                </div>\n                            </section>\n                    ))}</ul>\n\n                    {/*30 dni; do 31dni*/}\n                    <ul>{OneMonth.map((el, index) => (\n                            <section key={dataset[index].id} className={\"notes-all month\"}>\n                                <div className={\"notes-time\"}>\n                                    <li>{dataset[el].hour}</li>\n                                </div>\n                                <div className={\"notes-description\"}>\n                                    <li>{dataset[el].description}</li>\n                                </div>\n                                <div className={\"notes-content\"}>\n                                    <li>{dataset[el].notes}</li>\n                                </div>\n                            </section>\n                    ))}</ul>\n\n                    {/*365 dni; do 366dni*/}\n                    <ul>{OneYear.map((el, index) => (\n                            <section key={dataset[index].id} className={\"notes-all year\"}>\n                                <div className={\"notes-time\"}>\n                                    <li>{dataset[el].hour}</li>\n                                </div>\n                                <div className={\"notes-description\"}>\n                                    <li>{dataset[el].description}</li>\n                                </div>\n                                <div className={\"notes-content\"}>\n                                    <li>{dataset[el].notes}</li>\n                                </div>\n                            </section>\n                    ))}</ul>\n                </div>\n            </div>\n        </>\n    )\n}\n\n\n\n\n\n\n\n\n\n","export default __webpack_public_path__ + \"static/media/kz1.6c97c9c9.jpeg\";","export default __webpack_public_path__ + \"static/media/kz3.f3f1832a.jpeg\";","export default __webpack_public_path__ + \"static/media/kz2.5b64ac36.jpg\";","import React from 'react';\nimport forgetCurve1 from './../../src/images/kz1.jpeg'\nimport forgetCurve from './../../src/images/kz2.jpg'\nimport learnCurve from './../../src/images/kz3.jpeg'\n\n\nexport const Home = () => {\n    return (\n        <section className={\"about-container container\"}>\n            <p className={\"about-openSection\"}>Aby się czegoś trwale nauczyć, trzeba powtarzać to wielokrotnie i\n                systematycznie. Aplikacja wykorzystuje krzywą zapamiętywania, stworzoną na podstawie wyników badań\n                <a target={\"_blank\"} href=\"https://pl.wikipedia.org/wiki/Hermann_Ebbinghaus\">\n                    <span> Hermanna Ebbinghausa</span></a>.</p>\n            <div className={\"about-breakPoints\"}>\n\n                <div className={\"about-tenMinutes\"}><p className={\"breakPoint\"}>Pierwsza Powtórka po 10 min</p></div>\n                <div className={\"about-twoDays\"}><p className={\"breakPoint\"}>Druga powtórka po 2 dniach</p></div>\n                <div className={\"about-week\"}><p className={\"breakPoint\"}>Trzecia powtórka po tygodniu</p></div>\n                <div className={\"about-month\"}><p className={\"breakPoint\"}>Czwarta powtórka po miesiącu</p></div>\n                <div className={\"about-year\"}><p className={\"breakPoint\"}>Piąta powtórka po roku</p></div>\n\n            </div>\n            <p className={\"about-text\"}>Późniejsze badania doprecyzowały odkrycie Ebbinghausa. Pokazały m.in., że\n                najwięcej informacji pamiętamy,\n                nie jak mogło by się wydawać, pod koniec nauki, a około 10 minut po jej zakończeniu. Do tego czasu nasz\n                mózg wciąż intensywnie przetwarza zgromadzone informacje, próbując je uporządkować i powiązać (proces\n                ten nazywamy inkubacją). Wtedy właśnie (10-15 minut po zakończeniu nauki) wypada idealny moment na\n                pierwszą powtórkę</p>\n            <div className={\"about-pictures\"}>\n                <a className={\"learnCurve\"}  target={\"_blank\"} href=\"http://www.ke.edu.pl/pl/wiadomosc/186-interwaly-czyli-jak-sie-uczyc-aby-jak-najwiecej-zapamietac\">\n                <img src={learnCurve} className={\"learnCurve-img\"} alt=\"learning Curve\"/>\n                </a>\n                <a className={\"forgetCurve1\"} target={\"_blank\"} href=\"http://zorganizowani.com/szybka-nauka/krzywa-ebbinghausa-zapominania-powtorki/\">\n                    <img src={forgetCurve1} className={\"forgetCurve1-img\"} alt=\"forgetting Curve\"/>\n                </a>\n            </div>\n        </section>\n\n    )\n}","import React from 'react'\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faFacebookF, faTwitter} from '@fortawesome/free-brands-svg-icons'\n\nlibrary.add(faFacebookF);\nlibrary.add(faTwitter);\n\n\nexport const Footer = () => {\n    return (\n        <footer className={\"footer\"}>\n            <section className={\"footer-container container\"}>\n                <div className={\"footer-logo\"}>\n                    <h4 className={\"footer-logo-header\"}>TwójNotatnik</h4>\n                    <p className={\"footer-logo-copy\"}>© 2019 TwójNotatnik Wszelkie prawa zastrzeżone twitter\n                        facebook</p>\n                </div>\n                <div className={\"footer-social-media\"}>\n                    <a href=\"https://www.facebook.com/dominik.rolewski.3/\" target={\"_blank\"}>\n                        <FontAwesomeIcon className={\"facebook\"} icon={['fab', 'facebook-f']}/>\n                    </a>\n                    <a href=\"https://twitter.com/DominikRolewski\" target={\"_blank\"}>\n                        <FontAwesomeIcon className={\"twitter\"} icon={['fab', 'twitter']}/>\n                    </a>\n                </div>\n            </section>\n        </footer>\n    )\n}","import './sass/main.scss'\nimport {useEffect, useState} from \"react\";\nimport {addNewNote, getAllNotes} from \"./services/api-service\";\nimport React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n    HashRouter,\n    Route,\n    Link,\n    Switch,\n    NavLink,\n} from 'react-router-dom';\nimport {Notes, AddNot, Notifications} from './components/Nav'\nimport {Home} from \"./components/about\";\nimport {Footer} from \"./components/footer\";\n\n\nconst App = () => {\n    const [dataset, setDataset] = useState([])//dane z JSON SERVER\n    const [currentTime, setCurrentTime] = useState('')//new Date().getTime()\n\n    const [indexesTenMin, setIndexesTenMin] = useState([]);\n    const [indexesTwoDay, setIndexesTwoDay] = useState([]);\n    const [indexesOneWeek, setIndexesOneWeek] = useState([]);\n    const [indexesOneMonth, setIndexesOneMonth] = useState([]);\n    const [indexesOneYear, setIndexesOneYear] = useState([]);\n\n\n    useEffect(() => {\n        fetch('http://localhost:3000/notes')\n            .then(r => r.json())\n            .then(data => {\n                setDataset(data)\n            })\n\n        const intervalId = setInterval(() => {\n            setCurrentTime(new Date().getTime())\n        }, 2000)\n        return () => {\n            clearInterval(intervalId)\n        }\n    }, [])\n\n    const AddDate = (data) => {\n        setDataset(prevState => [data, ...prevState])\n    }\n\n    useEffect(() => {\n        // przypisywanie do tablic\n        const indexTenMin = [];\n        const indexTwoDay = [];\n        const indexOneWeek = [];\n        const indexOneMonth = [];\n        const indexOneYear = [];\n\n        for (let i = 0; i < dataset.length; i++) {\n            //-------------------------------------\n            //------------PEŁNA WERSJA-------------\n            //-------------------------------------\n            // od 10min: 600000;     do 1 dzień: 86400000 ms;\n            if ((dataset[i].time + 600000) < currentTime && (dataset[i].time+ 86400000) > currentTime) {\n                indexTenMin.push(i)\n            }\n            // od 2dni: 172800000 ms;  do 3dni: 259200000 ms;\n            if ((dataset[i].time + 172800000) < currentTime && (dataset[i].time+ 259200000) > currentTime) {\n                indexTwoDay.push(i)\n            }\n            // od 7dni: 604800000 ms;   do 8dni: 691200000 ms;\n            if ((dataset[i].time + 604800000) < currentTime && (dataset[i].time+ 691200000) > currentTime) {\n                indexOneWeek.push(i)\n            }\n            //od 30 dni: 2592000000 ms;   do 32dni: 2678400000 ms;\n            if ((dataset[i].time + 2592000000) < currentTime && (dataset[i].time+ 2678400000) > currentTime) {\n                indexOneMonth.push(i)\n            }\n            //od 365 dni: 31536000000 ms;   do 366dmi: 31622400000 ms;\n            if ((dataset[i].time + 31536000000) < currentTime && (dataset[i].time+ 31622400000) > currentTime) {\n                indexOneYear.push(i)\n            }\n            //-------------------------------\n            //-----TESTOWANIE NOTATNOKA------\n            //-------------------------------\n            // // od 5s: 5000;     do 10s 10000 ms;\n            // if ((dataset[i].time + 5000) < currentTime && (dataset[i].time + 10000) > currentTime) {\n            //     indexTenMin.push(i)\n            // }\n            // // od 15s: 15000 ms;     do 20s: 20000 ms;\n            // if ((dataset[i].time + 15000) < currentTime && (dataset[i].time + 20000) > currentTime) {\n            //     indexTwoDay.push(i)\n            // }\n            // // od 25s: 25000 ms;   do 30s 30000 ms;\n            // if ((dataset[i].time + 25000) < currentTime && (dataset[i].time + 30000) > currentTime) {\n            //     indexOneWeek.push(i)\n            // }\n            // // od 35s: 35000 ms;     do 40s: 40000 ms;\n            // if ((dataset[i].time + 35000) < currentTime && (dataset[i].time + 40000) > currentTime) {\n            //     indexOneMonth.push(i)\n            // }\n            // // od 45s: 45000 ms;      do 50s: 50000 ms;\n            // if ((dataset[i].time + 45000) < currentTime && (dataset[i].time + 50000) > currentTime) {\n            //     indexOneYear.push(i)\n            // }\n        }\n        //przypisywanie wartości tablic do state\n        setIndexesTenMin(indexTenMin);\n        setIndexesTwoDay(indexTwoDay);\n        setIndexesOneWeek(indexOneWeek)\n        setIndexesOneMonth(indexOneMonth)\n        setIndexesOneYear(indexOneYear)\n    }, [currentTime])//odpala się przy każdej\n    // aktualizacji aktualnego czasu\n    // console.log(indexes);\n\n\n    const [showMenu, setShowMenu] = useState(true);\n    const [isMobile, setIsMobile] = useState(true);\n    const handleShowMenu = e => {\n        e.preventDefault();\n        setShowMenu(!showMenu);\n    }\n    useEffect(() => {\n        // const query = window.matchMedia(\"(min-width:720px)\");\n        const query = window.matchMedia(\"(min-width:1354px)\");\n        query.addListener((e) => {\n            setIsMobile(!e.matches);\n            setShowMenu(e.matches);\n        });\n    }, [])\n\n\n    return (\n        <>\n\n            <HashRouter>\n                <header className={\"header\"}>\n                    <div className={\"header__container container\"}>\n                    <div className={\"header-notifications\"}>\n                        <div>\n                            <p className={\"tenMinutes\"}>1 powtórka: {indexesTenMin.length} - notatek</p>\n                            <p className={\"twoDays\"}>2 powtórka: {indexesTwoDay.length} - notatek</p>\n                            <p className={\"week\"}>3 powtórka: {indexesOneWeek.length} - notatek</p>\n                        </div>\n                        <div>\n                            <p className={\"month\"}>4 powtórka: {indexesOneMonth.length} - notatek</p>\n                            <p className={\"year\"}>5 powtórka: {indexesOneYear.length} - notatek</p>\n                        </div>\n                    </div>\n                    <nav>\n                        {isMobile && <div onClick={handleShowMenu} className={\"menu__toggle\"}>\n                            <span/>\n                            <span/>\n                            <span/></div>}\n\n                        {showMenu &&\n                        <div className={\"menu__list\"}>\n                            <ul>\n                                <li className={\"nav-element\"}>\n                                    <Link to={\"/home\"}>Aplikacja</Link>\n                                </li>\n                                <li className={\"nav-element\"}>\n                                    <Link to={\"/notes\"}>Wszystkie notatki</Link>\n                                </li>\n                                <li className={\"nav-element\"}>\n                                    <Link to={\"/addNot\"}>Dodaj notatkę</Link>\n                                </li>\n\n                                <li className={\"nav-element\"}>\n                                    <Link to={\"/notifications\"}>Powtórka</Link>\n                                </li>\n                            </ul>\n                        </div>\n                        }\n                    </nav>\n                    </div>\n                </header>\n\n\n                <Switch>\n                    <div className={\"content\"}>\n                    <Route exact path={\"/home\"}>\n                        <Home />\n                    </Route>\n\n                    <Route exact path={\"/notes\"}>\n                        <Notes tim={\"Wszystkie notatki:\"}/>\n                    </Route>\n\n                    <Route exact path={\"/addNot\"}>\n                        <AddNot onAddDate={AddDate} tim={\"Dodaj notatkę:\"}/>\n                    </Route>\n\n                    <Route exact path={\"/notifications\"}>\n                        <Notifications\n                            dataset={dataset}\n\n                            tenMin={indexesTenMin}\n                            twoDay={indexesTwoDay}\n\n                            OneWeek={indexesOneWeek}\n                            OneMonth={indexesOneMonth}\n                            OneYear={indexesOneYear}\n\n                            tim={\"Powtórka\"}/>\n                    </Route>\n                    </div>\n                </Switch>\n            </HashRouter>\n            <Footer/>\n        </>\n    )\n}\n\nexport default App;\n\n\n// import './sass/main.scss'\n// import {useEffect, useState} from \"react\";\n// import {addNewNote, getAllNotes} from \"./services/api-service\";\n//\n//\n// function App(){\n//   const [notes, setNotes] = useState([]);\n//   useEffect(  () =>{\n//     getAllNotes(data => setNotes(data), err => console.log());\n//   },[])\n//\n//   const handleAddNote = () => {\n//     //create noteObje\n//     const note = {\n//       content: \"\",\n//\n//     }\n//     addNewNote(note);\n//   }\n//   return (\n//       <div className=\"App\">\n//\n//       </div>\n//   );\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n// reportWebVitals();\n\n\n"],"sourceRoot":""}