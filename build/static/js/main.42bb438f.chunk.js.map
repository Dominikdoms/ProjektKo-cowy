{"version":3,"sources":["components/Nav.js","App.js","index.js"],"names":["Home","tim","Notes","useState","notes","setNotes","useEffect","fetch","then","r","json","data","className","length","map","hour","id","description","onClick","method","response","prevNotes","filter","not","AddNot","onAddDate","setDescription","error","setError","onSubmit","event","preventDefault","newError","push","newNotes","Date","time","getTime","body","JSON","stringify","headers","type","value","onChange","e","target","name","cols","rows","style","color","Notifications","dataset","tenMin","twoDay","OneWeek","OneMonth","OneYear","el","index","App","setDataset","currentTime","setCurrentTime","indexesTenMin","setIndexesTenMin","indexesTwoDay","setIndexesTwoDay","indexesOneWeek","setIndexesOneWeek","indexesOneMonth","setIndexesOneMonth","indexesOneYear","setIndexesOneYear","intervalId","setInterval","clearInterval","indexTenMin","indexTwoDay","indexOneWeek","indexOneMonth","indexOneYear","i","showMenu","setShowMenu","isMobile","setIsMobile","window","matchMedia","addListener","matches","to","exact","path","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42bb438f.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Moment from \"react-moment\";//formatowanie dat\nimport 'moment-timezone'//ustawia strefy czasowe\n\n//-----------------------\n//---------HOME----------\n//-----------------------\nexport const Home = ({tim}) => {\n    return (\n        <h1>{tim}</h1>\n    )\n}\n\n//-------------------------------\n//----------SHOW NOTES-----------\n//-------------------------------\n\nexport const Notes = ({tim}) => {\n    const [notes, setNotes] = useState([])\n\n    useEffect(() => {\n        fetch('http://localhost:3000/notes')\n            .then(r => r.json())\n            .then(data => {\n                setNotes(data)\n            })\n    }, [])\n\n    const deleteNotes = (id) => {\n        fetch(`http://localhost:3000/notes/${id}`, {\n            method: \"DELETE\",\n        })\n            .then((response) => response.json())\n            .then(() => {\n                setNotes((prevNotes) => prevNotes.filter((not) => not.id !== id))\n            })\n    }\n\n    return (\n        <>\n            <div className={\"notes-container container\"}>\n                <h1>Wszystkie Notatki: {notes.length}</h1>\n                <ul>{notes.map(notes => (\n                    <>\n                        <section className={\"notes-all\"}>\n\n                            <div className={\"notes-time\"}>\n                                <li key={notes.id + 5}>{notes.hour}</li>\n                            </div>\n                            <div className={\"notes-description\"}>\n                                <li key={notes.id + 4}>\n                                    {notes.description}\n                                </li>\n                            </div>\n                            <div className={\"notes-content\"}>\n                                <li key={notes.id + 2}>\n                                    {notes.notes}\n                                </li>\n                            </div>\n                            <button className={\"notes-btn\"} key={notes.id} onClick={() => deleteNotes(notes.id)}>Usu≈Ñ\n                            </button>\n                        </section>\n                    </>\n                ))}</ul>\n            </div>\n        </>\n    )\n}\n\n\n//--------------------------\n//--------ADD NOTES---------\n//--------------------------\nexport const AddNot = ({onAddDate}, {tim}) => {\n\n    const [description, setDescription] = useState('')\n    const [notes, setNotes] = useState('')\n    const [error, setError] = useState(\"\")\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newError = [];\n        if (description < 1) newError.push(1)\n        if (notes < 1) newError.push(1)\n        if (newError.length !== 0) {\n            setError(\"Musi byƒá przynajmniej jeden znak\")\n        } else {\n            setError(\"\")\n\n            const newNotes = {\n                description,\n                notes,\n                hour: new Date(),//.toLocaleTimeString(),\n                time: new Date().getTime()\n            }\n\n            if (newError.length === 0) {\n                fetch('http://localhost:3000/notes', {\n                    method: \"POST\",\n                    body: JSON.stringify(newNotes),\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                })\n                    .then((r) => r.json())\n                    .then((data) => {\n                        if (typeof onAddDate === 'function') {\n                            onAddDate(data)\n                        }\n                    })\n            }\n            setNotes(\"\")\n            setDescription(\"\")\n        }\n    }\n\n\n    return (\n        <>\n            <h1>{tim}</h1>\n\n            <form onSubmit={handleSubmit}>\n                <p>Opis:</p>\n                <input type=\"text\"\n                       value={description}\n                       onChange={e => setDescription(e.target.value)}/>\n                <label>\n                    <p>Notatka:</p>\n                    <textarea name=\"notes\"\n                              cols=\"30\"\n                              rows=\"10\"\n                              value={notes}\n                              onChange={e => setNotes(e.target.value)}/>\n                </label>\n                <p style={{color: \"red\"}}>{error}</p>\n                <button>Add Notes</button>\n            </form>\n        </>\n    )\n}\n\n\n//--------------------------\n//------NOTIFICATIONS-------\n//--------------------------\n\nexport const Notifications = ({tim, dataset, tenMin, twoDay, OneWeek, OneMonth, OneYear}) => {\n\n    return (\n        <>\n            <div className={\"notifications notifications-container container \"}>\n                <h1>Wszystkich notatek do powt√≥rki: {tenMin.length +\n                twoDay.length + OneWeek.length + OneMonth.length + OneYear.length}\n                </h1>\n\n                <div className={\"notes-container\"}>\n\n                    {/*10 min; do 1 dzie≈Ñ*/}\n                    <ul>{tenMin.map((el, index) => (\n                        <>\n                            <section className={\"notes-all tenMinutes\"}>\n                                <div className={\"notes-time\"}>\n                                    <li key={dataset[index].id + 2}>{dataset[el].hour}</li>\n                                </div>\n                                <div className={\"notes-description\"}>\n                                    <li key={dataset[index].id}>{dataset[el].description}</li>\n                                </div>\n                                <div className={\"notes-content\"}>\n                                    <li key={dataset[index].id + 1}>{dataset[el].notes}</li>\n                                </div>\n                            </section>\n                        </>\n                    ))}</ul>\n\n                    {/*2 dni; do 3 dni*/}\n                    <ul>{twoDay.map((el, index) => (\n                        <>\n                            <section className={\"notes-all twoDays\"}>\n                                <div className={\"notes-time\"}>\n                                    <li key={dataset[index].id + 2}>{dataset[el].hour}</li>\n                                </div>\n                                <div className={\"notes-description\"}>\n                                    <li key={dataset[index].id}>{dataset[el].description}</li>\n                                </div>\n                                <div className={\"notes-content\"}>\n                                    <li key={dataset[index].id + 1}>{dataset[el].notes}</li>\n                                </div>\n                            </section>\n                        </>\n                    ))}</ul>\n\n                    {/*7 dni; do 8 dni*/}\n                    <ul>{OneWeek.map((el, index) => (\n                        <>\n                            <section className={\"notes-all week\"}>\n                                <div className={\"notes-time\"}>\n                                    <li key={dataset[index].id + 2}>{dataset[el].hour}</li>\n                                </div>\n                                <div className={\"notes-description\"}>\n                                    <li key={dataset[index].id}>{dataset[el].description}</li>\n                                </div>\n                                <div className={\"notes-content\"}>\n                                    <li key={dataset[index].id + 1}>{dataset[el].notes}</li>\n                                </div>\n                            </section>\n                        </>\n                    ))}</ul>\n\n                    {/*30 dni; do 31dni*/}\n                    <ul>{OneMonth.map((el, index) => (\n                        <>\n                            <section className={\"notes-all month\"}>\n                                <div className={\"notes-time\"}>\n                                    <li key={dataset[index].id + 2}>{dataset[el].hour}</li>\n                                </div>\n                                <div className={\"notes-description\"}>\n                                    <li key={dataset[index].id}>{dataset[el].description}</li>\n                                </div>\n                                <div className={\"notes-content\"}>\n                                    <li key={dataset[index].id + 1}>{dataset[el].notes}</li>\n                                </div>\n                            </section>\n                        </>\n                    ))}</ul>\n\n                    {/*365 dni; do 366dni*/}\n                    <ul>{OneYear.map((el, index) => (\n                        <>\n                            <section className={\"notes-all year\"}>\n                                <div className={\"notes-time\"}>\n                                    <li key={dataset[index].id + 2}>{dataset[el].hour}</li>\n                                </div>\n                                <div className={\"notes-description\"}>\n                                    <li key={dataset[index].id}>{dataset[el].description}</li>\n                                </div>\n                                <div className={\"notes-content\"}>\n                                    <li key={dataset[index].id + 1}>{dataset[el].notes}</li>\n                                </div>\n                            </section>\n                        </>\n                    ))}</ul>\n                </div>\n            </div>\n        </>\n    )\n}\n\n\n// export const Notifications = ({tim, dataset, tenMin, oneHour, twoDay}) => {\n//     const [notes, setNotes] = useState([])\n// NIE DZIA≈ÅA JESZCZE/// Mo≈ºna przeƒáwiczyƒá, ale ju≈º nie potrzebuje tej funkcji\n//     const addId = (id) => {\n//         const data = {\n//             tenId: id\n//         };\n//\n//         fetch(`http://localhost:3000/notes/${id}`, {\n//             method: \"PATCH\",\n//\n//             body: JSON.stringify(data),\n//             headers: {\n//                 \"Content-Type\": \"application/json\"\n//             }\n//         })\n//             .then(response => response.json())\n//             .then(data => {\n//                 console.log(data);\n//                 setNotes((prevNotes) => prevNotes.filter((not) => not.id !== id))\n//             })\n//             .catch(error => {\n//                 console.log(error);\n//             });\n//     }\n\n\n\n\n\n\n\n\n","import './sass/main.scss'\nimport {useEffect, useState} from \"react\";\nimport {addNewNote, getAllNotes} from \"./services/api-service\";\nimport React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n    HashRouter,\n    Route,\n    Link,\n    Switch,\n    NavLink,\n} from 'react-router-dom';\nimport {Home, Notes, AddNot, Notifications} from './components/Nav'\n\n\nconst App = () => {\n    const [dataset, setDataset] = useState([])//dane z JSON SERVER\n    const [currentTime, setCurrentTime] = useState('')//new Date().getTime()\n\n    const [indexesTenMin, setIndexesTenMin] = useState([]);\n    const [indexesTwoDay, setIndexesTwoDay] = useState([]);\n    const [indexesOneWeek, setIndexesOneWeek] = useState([]);\n    const [indexesOneMonth, setIndexesOneMonth] = useState([]);\n    const [indexesOneYear, setIndexesOneYear] = useState([]);\n\n\n    useEffect(() => {\n        fetch('http://localhost:3000/notes')\n            .then(r => r.json())\n            .then(data => {\n                setDataset(data)\n            })\n\n        const intervalId = setInterval(() => {\n            setCurrentTime(new Date().getTime())\n        }, 2000)\n        return () => {\n            clearInterval(intervalId)\n        }\n    }, [])\n\n    const AddDate = (data) => {\n        setDataset(prevState => [...prevState, data])\n    }\n\n    useEffect(() => {\n        // przypisywanie do tablic\n        const indexTenMin = [];\n        const indexTwoDay = [];\n        const indexOneWeek = [];\n        const indexOneMonth = [];\n        const indexOneYear = [];\n\n        for (let i = 0; i < dataset.length; i++) {\n            //-------------------------------------\n            //------------PE≈ÅNA WERSJA-------------\n            //-------------------------------------\n            // // od 10min: 600000;     do 1 dzie≈Ñ: 86400000 ms;\n            // if ((dataset[i].time + 600000) < currentTime && (dataset[i].time+ 86400000) > currentTime) {\n            //     indexTenMin.push(i)\n            // }\n            // // od 2dni: 172800000 ms;  do 3dni: 259200000 ms;\n            // if ((dataset[i].time + 172800000) < currentTime && (dataset[i].time+ 259200000) > currentTime) {\n            //     indexTwoDay.push(i)\n            // }\n            // // od 7dni: 604800000 ms;   do 8dni: 691200000 ms;\n            // if ((dataset[i].time + 604800000) < currentTime && (dataset[i].time+ 691200000) > currentTime) {\n            //     indexOneWeek.push(i)\n            // }\n            // //od 30 dni: 2592000000 ms;   do 32dni: 2678400000 ms;\n            // if ((dataset[i].time + 2592000000) < currentTime && (dataset[i].time+ 2678400000) > currentTime) {\n            //     indexOneMonth.push(i)\n            // }\n            // //od 365 dni: 31536000000 ms;   do 366dmi: 31622400000 ms;\n            // if ((dataset[i].time + 31536000000) < currentTime && (dataset[i].time+ 31622400000) > currentTime) {\n            //     indexOneYear.push(i)\n            // }\n            //-------------------------------\n            //-----TESTOWANIE NOTATNOKA------\n            //-------------------------------\n            // od 5s: 5000;     do 10s 10000 ms;\n            if ((dataset[i].time + 5000) < currentTime && (dataset[i].time + 10000) > currentTime) {\n                indexTenMin.push(i)\n            }\n            // od 15s: 15000 ms;     do 20s: 20000 ms;\n            if ((dataset[i].time + 15000) < currentTime && (dataset[i].time + 20000) > currentTime) {\n                indexTwoDay.push(i)\n            }\n            // od 25s: 25000 ms;   do 30s 30000 ms;\n            if ((dataset[i].time + 25000) < currentTime && (dataset[i].time + 30000) > currentTime) {\n                indexOneWeek.push(i)\n            }\n            // od 35s: 35000 ms;     do 40s: 40000 ms;\n            if ((dataset[i].time + 35000) < currentTime && (dataset[i].time + 40000) > currentTime) {\n                indexOneMonth.push(i)\n            }\n            // od 45s: 45000 ms;      do 50s: 50000 ms;\n            if ((dataset[i].time + 45000) < currentTime && (dataset[i].time + 50000) > currentTime) {\n                indexOneYear.push(i)\n            }\n            //-------------------------------------------\n            //---------------STOP TEST-------------------\n            // // od 5s: 5000;     do 10s 10000 ms;\n            // if ((dataset[i].time + 5000) < currentTime && (dataset[i].time + 10000000) > currentTime) {\n            //     indexTenMin.push(i)\n            // }\n            // // od 15s: 15000 ms;     do 20s: 20000 ms;\n            // if ((dataset[i].time + 5000) < currentTime && (dataset[i].time + 10000000) > currentTime) {\n            //     indexTwoDay.push(i)\n            // }\n            // // od 25s: 25000 ms;   do 30s 30000 ms;\n            // if ((dataset[i].time + 5000) < currentTime && (dataset[i].time + 10000000) > currentTime) {\n            //     indexOneWeek.push(i)\n            // }\n            // // od 35s: 35000 ms;     do 40s: 40000 ms;\n            // if ((dataset[i].time + 5000) < currentTime && (dataset[i].time + 10000000) > currentTime) {\n            //     indexOneMonth.push(i)\n            // }\n            // // od 45s: 45000 ms;      do 50s: 50000 ms;\n            // if ((dataset[i].time + 5000) < currentTime && (dataset[i].time + 10000000) > currentTime) {\n            //     indexOneYear.push(i)\n            // }\n            //-------------------------------------------\n        }\n        //przypisywanie warto≈õci tablic do state\n        setIndexesTenMin(indexTenMin);\n        setIndexesTwoDay(indexTwoDay);\n        setIndexesOneWeek(indexOneWeek)\n        setIndexesOneMonth(indexOneMonth)\n        setIndexesOneYear(indexOneYear)\n    }, [currentTime])//odpala siƒô przy ka≈ºdej\n    // aktualizacji aktualnego czasu\n    // console.log(indexes);\n\n\n    const [showMenu, setShowMenu] = useState(true);\n    const [isMobile, setIsMobile] = useState(false);\n    const handleShowMenu = e => {\n        e.preventDefault();\n        setShowMenu(!showMenu);\n    }\n    useEffect(() => {\n        const query = window.matchMedia(\"(min-width:720px)\");\n        query.addListener((e) => {\n            setIsMobile(!e.matches);\n            setShowMenu(e.matches);\n        });\n    }, [])\n\n\n    return (\n        <>\n\n            <HashRouter>\n                <header className={\"header__container container\"}>\n                    <div className={\"header-notifications\"}>\n                        <div>\n                            <p className={\"tenMinutes\"}>1 powt√≥rka: {indexesTenMin.length} - notatek</p>\n                            <p className={\"twoDays\"}>2 powt√≥rka: {indexesTwoDay.length} - notatek</p>\n                            <p className={\"week\"}>3 powt√≥rka: {indexesOneWeek.length} - notatek</p>\n                        </div>\n                        <div>\n                            <p className={\"month\"}>4 powt√≥rka: {indexesOneMonth.length} - notatek</p>\n                            <p className={\"year\"}>5 powt√≥rka: {indexesOneYear.length} - notatek</p>\n                        </div>\n                    </div>\n                    <nav>\n                        {isMobile && <div onClick={handleShowMenu} className={\"menu__toggle\"}>\n                            <span/>\n                            <span/>\n                            <span/></div>}\n\n                        {showMenu &&\n                        <div className={\"menu__list\"}>\n                            <ul>\n                                <li className={\"nav-element\"}>\n                                    <Link to={\"/\"}>Strona g≈Ç√≥wna</Link>\n                                </li>\n                                <li className={\"nav-element\"}>\n                                    <Link to={\"/notes\"}>Wszystkie notatki</Link>\n                                </li>\n                                <li className={\"nav-element\"}>\n                                    <Link to={\"/addNot\"}>Dodaj notatkƒô</Link>\n                                </li>\n\n                                <li className={\"nav-element\"}>\n                                    <Link to={\"/notifications\"}>Powt√≥rka</Link>\n                                </li>\n                            </ul>\n                        </div>\n                        }\n                    </nav>\n                </header>\n\n\n                <Switch>\n                    <Route exact path={\"/\"}>\n                        <Home tim={\"Strona g≈Ç√≥wna\"}/>\n                    </Route>\n\n                    <Route exact path={\"/notes\"}>\n                        <Notes tim={\"Wszystkie notatki:\"}/>\n                    </Route>\n\n                    <Route exact path={\"/addNot\"}>\n                        <AddNot onAddDate={AddDate} tim={\"Dodaj notatkƒô:\"}/>\n                    </Route>\n\n                    <Route exact path={\"/notifications\"}>\n                        <Notifications\n                            dataset={dataset}\n\n                            tenMin={indexesTenMin}\n                            twoDay={indexesTwoDay}\n\n                            OneWeek={indexesOneWeek}\n                            OneMonth={indexesOneMonth}\n                            OneYear={indexesOneYear}\n\n                            tim={\"Powt√≥rka\"}/>\n                    </Route>\n                </Switch>\n            </HashRouter>\n        </>\n    )\n}\n\nexport default App;\n\n\n// import './sass/main.scss'\n// import {useEffect, useState} from \"react\";\n// import {addNewNote, getAllNotes} from \"./services/api-service\";\n//\n//\n// function App(){\n//   const [notes, setNotes] = useState([]);\n//   useEffect(  () =>{\n//     getAllNotes(data => setNotes(data), err => console.log());\n//   },[])\n//\n//   const handleAddNote = () => {\n//     //create noteObje\n//     const note = {\n//       content: \"\",\n//\n//     }\n//     addNewNote(note);\n//   }\n//   return (\n//       <div className=\"App\">\n//\n//       </div>\n//   );\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n// reportWebVitals();\n\n\n"],"sourceRoot":""}